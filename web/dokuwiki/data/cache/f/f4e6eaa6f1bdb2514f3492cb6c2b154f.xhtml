
<h1 class="sectionedit1" id="installation">Installation</h1>
<div class="level1">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Installation&quot;,&quot;hid&quot;:&quot;installation&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-28&quot;} -->
<h2 class="sectionedit2" id="environment_preparation">Environment Preparation</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Gain system access:</p><pre class='cli  '><span class="cli_prompt">&gt; </span><span class="cli_command">root</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">voidlinux</span>
<span class="cli_prompt"># </span><span class="cli_command">bash</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Set console keymap and font:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">loadkeys us</span>
<span class="cli_prompt"># </span><span class="cli_command">setfont eurlatgr</span>
<span class="cli_prompt"># </span><span class="cli_command">unicode_start</span></pre><p></div>
</li>
<li class="level1"><div class="li">  Disable system beeping (pcspkr module):</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">lsmod | grep pcspkr &amp;&amp; modprobe -r pcspkr</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Verify UEFI and remount UEFI NVRAM as read only<sup><a href="#fn__1" id="fnt__1" class="fn_top">1)</a></sup>:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">ls -ld /sys/firmware/efi/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount -o remount,ro efivarfs</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Verify network connectivity.</div>
</li>
<li class="level1"><div class="li"> Update live environment system and install additional packages:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">xbps-install -Su[y] xbps ; xbps-install -Su[y]</span>
<span class="cli_prompt"># </span><span class="cli_command">xbps-install [-y] parted</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Environment Preparation&quot;,&quot;hid&quot;:&quot;environment_preparation&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;29-716&quot;} -->
<h2 class="sectionedit3" id="disk_preparation">Disk Preparation</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Create partitions:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">cfdisk -z &lt;/dev/sdX&gt;</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">gpt</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">n</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">2GiB</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">t</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">EFI System</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">n</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command"> (Enter)</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">W</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">yes</span>
<span class="cli_prompt">cfdisk&gt; </span><span class="cli_command">q</span>
<span class="cli_prompt"># </span><span class="cli_command">parted -s &lt;/dev/sdX&gt; name 1 ESP</span>
<span class="cli_prompt"># </span><span class="cli_command">parted -s &lt;/dev/sdX&gt; name 2 VOID</span></pre><p></div>
</li>
<li class="level1 node"><div class="li"> Create filesystems: </div>
<ol>
<li class="level2"><div class="li"> EFI filesystem:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">wipefs -a &lt;/dev/sdX1&gt;</span>
<span class="cli_prompt"># </span><span class="cli_command">mkfs.vfat -F 32 &lt;/dev/sdX1&gt;</span>
<span class="cli_prompt"># </span><span class="cli_command">fatlabel &lt;/dev/sdX1&gt; ESP</span>
<span class="cli_prompt"># </span><span class="cli_command">fatlabel -i &lt;/dev/sdX1&gt; 00000001</span>
<span class="cli_prompt"># </span><span class="cli_command">fsck.vfat &lt;/dev/sdX1&gt; ; echo $?</span></pre><p></div>
</li>
<li class="level2"><div class="li"> LUKS encrypted filesystem:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">dd if=/dev/urandom of=&lt;/dev/sdX2&gt; status=progress ; sync</span>
<span class="cli_prompt"># </span><span class="cli_command">wipefs -a &lt;/dev/sdX2&gt;</span>
<span class="cli_prompt"># </span><span class="cli_command">cryptsetup luksFormat --force-password --type luks2 &lt;/dev/sdX2&gt;</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">YES</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">&lt;NEW-LUKS-PASSWORD&gt;</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">&lt;NEW-LUKS-PASSWORD (VERIFY)&gt;</span>
<span class="cli_prompt"># </span><span class="cli_command">cryptsetup config --label LUKS-VOID &lt;/dev/sdX2&gt;</span>
<span class="cli_prompt"># </span><span class="cli_command">cryptsetup luksUUID --uuid 00000000-0000-0000-0000-000000000002 &lt;/dev/sdX2&gt;</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">YES</span>
<span class="cli_prompt"># </span><span class="cli_command">cryptsetup open --type luks2 &lt;/dev/sdX2&gt; luks-void</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">&lt;LUKS-PASSWORD&gt;</span></pre><p></div>
</li>
<li class="level2"><div class="li"> Root filesystem<sup><a href="#fn__2" id="fnt__2" class="fn_top">2)</a></sup>:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">wipefs -a /dev/mapper/luks-void</span>
<span class="cli_prompt"># </span><span class="cli_command">mkfs.btrfs /dev/mapper/luks-void</span>
<span class="cli_prompt"># </span><span class="cli_command">btrfs filesystem label /dev/mapper/luks-void VOID-ROOT</span>
<span class="cli_prompt"># </span><span class="cli_command">btrfstune -U 00000000-0000-0000-0000-000000000003 /dev/mapper/luks-void</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">y</span>
<span class="cli_prompt"># </span><span class="cli_command">btrfs check /dev/mapper/luks-void ; echo $?</span></pre><p></div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Verify partitions and filesystems:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">parted -s &lt;/dev/sdX&gt; [unit B] p free</span>
<span class="cli_prompt"># </span><span class="cli_command">lsblk -fp &lt;/dev/sdX&gt;</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Create btrfs subvolume(s):</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">mkdir -p /mnt/void/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount /dev/mapper/luks-void /mnt/void/</span>
<span class="cli_prompt"># </span><span class="cli_command">btrfs subvolume create /mnt/void/@</span>
<span class="cli_prompt"># </span><span class="cli_command">umount /mnt/void/</span></pre><p></div>
</li>
<li class="level1 node"><div class="li"> Mount filesystems:</div>
<ol>
<li class="level2"><div class="li"> Btrfs<sup><a href="#fn__3" id="fnt__3" class="fn_top">3)</a></sup> subvolume:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">mount -o noatime,compress=zstd:3,commit=120,subvol=@ /dev/mapper/luks-void /mnt/void/</span></pre><p></div>
</li>
<li class="level2"><div class="li"> ESP:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">mkdir -p /mnt/void/boot/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount &lt;/dev/sda1&gt; /mnt/void/boot/</span></pre><p></div>
</li>
</ol>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Disk Preparation&quot;,&quot;hid&quot;:&quot;disk_preparation&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:3,&quot;range&quot;:&quot;717-2632&quot;} -->
<h2 class="sectionedit4" id="base_system_installation">Base System Installation</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Instal minimal base system packages:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">xbps-install -S[y] -R https://repo-default.voidlinux.org/current -r /mnt/void/ base-minimal</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">y</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Base System Installation&quot;,&quot;hid&quot;:&quot;base_system_installation&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:4,&quot;range&quot;:&quot;2633-2822&quot;} -->
<h2 class="sectionedit5" id="chroot">Chroot</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Copy DNS configuration:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">cp -L /etc/resolv.conf /mnt/void/etc/</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Mount filesystems:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">mount --rbind /dev/ /mnt/void/dev/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --rbind /sys/ /mnt/void/sys/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --rbind /proc/ /mnt/void/proc/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --rbind /run/ /mnt/void/run/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --make-rslave /mnt/void/dev/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --make-rslave /mnt/void/sys/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --make-rslave /mnt/void/proc/</span>
<span class="cli_prompt"># </span><span class="cli_command">mount --make-rslave /mnt/void/run/</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Chroot into the new installation:</p><pre class='cli  '><span class="cli_prompt"># </span><span class="cli_command">chroot /mnt/void/ /bin/sh</span>
<span class="cli_prompt"># </span><span class="cli_command">. ./etc/profile</span>
<span class="cli_prompt"># </span><span class="cli_command">export PS1=&#039;(chroot) # &#039;</span></pre><p></div>
</li>
</ol>
<hr />

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Chroot&quot;,&quot;hid&quot;:&quot;chroot&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:5,&quot;range&quot;:&quot;2823-3386&quot;} -->
<h2 class="sectionedit6" id="full_system_installation">Full System Installation</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Install additional repositories<sup><a href="#fn__4" id="fnt__4" class="fn_top">4)</a></sup> and synchronize them:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install void-repo-nonfree void-repo-multilib void-repo-multilib-nonfree</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install -Su xbps ; xbps-install -Su</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Partitioning tools:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install parted cryptsetup dosfstools e2fsprogs btrfs-progs</span></pre><p></div>
</li>
<li class="level1"><div class="li"> System tools:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xpbs-install kbd kmod eudev ncurses less</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Administration tools:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install mdocml man-pages neovim git file tree ncdu psmisc htop btop neofetch inxi</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Shell tools:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install zsh zsh-autosuggestions zsh-completions zsh-syntax-highlighting</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Boot tools:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install grub-x86_64-efi dracut-uefi linux linux-lts [intel-ucode|linux-firmware-amd]</span></pre><p></div>
</li>
<li class="level1 node"><div class="li"> Network tools:</div>
<ol>
<li class="level2"><div class="li"> Basic:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install iproute2 dhcpcd unbound nftables</span></pre><p></div>
</li>
<li class="level2"><div class="li"> Ethernet:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install ethtool</span></pre><p></div>
</li>
<li class="level2"><div class="li"> Wi-Fi:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-install wpa_supplicant iw</span></pre><p></div>
</li>
</ol>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Full System Installation&quot;,&quot;hid&quot;:&quot;full_system_installation&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:6,&quot;range&quot;:&quot;3387-4536&quot;} -->
<h2 class="sectionedit7" id="swap_file">Swap File</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Allocate space on COW filesystem (such as btrfs):</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">truncate -s 0 /swap</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">chattr +C /swap</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">fallocate -l 4G /swap</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">chmod 0600 /swap</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Set file as swap area:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">mkswap /swap</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">swapon /swap</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Swap File&quot;,&quot;hid&quot;:&quot;swap_file&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:7,&quot;range&quot;:&quot;4537-4832&quot;} -->
<h2 class="sectionedit8" id="system_configuration">System Configuration</h2>
<div class="level2">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;System Configuration&quot;,&quot;hid&quot;:&quot;system_configuration&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:8,&quot;range&quot;:&quot;4833-4866&quot;} -->
<h3 class="sectionedit9" id="xbps">XBPS</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Set ignored packages by XBPS:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=0" title="Download Snippet" class="mediafile mf_conf">/etc/xbps.d/ignore.conf</a></dt>
<dd><pre class="code file text">## If package depends on ignored package, the dependecy is always satisfied
## without installing ignored package.
ignorepkg=nvi
ignorepkg=sudo</pre>
</dd></dl>
</div>
</li>
<li class="level1"><div class="li"> Uninstall unneeded packages:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-remove -Ro nvi</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;XBPS&quot;,&quot;hid&quot;:&quot;xbps&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:9,&quot;range&quot;:&quot;4867-5180&quot;} -->
<h3 class="sectionedit10" id="filesystems">Filesystems</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Configure crypttab:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=1" title="Download Snippet" class="mediafile mf_">/etc/crypttab</a></dt>
<dd><pre class="code file text">## &lt;MAPPER-NAME&gt; &lt;DEVICE&gt; &lt;PASSWORD-FILE&gt; &lt;OPTIONS&gt;
luks-root UUID=00000000-0000-0000-0000-000000000002 none luks</pre>
</dd></dl>
</div>
</li>
<li class="level1"><div class="li"> Configure fstab:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=2" title="Download Snippet" class="mediafile mf_">/etc/fstab</a></dt>
<dd><pre class="code file text">## &lt;FILE-SYSTEM&gt; &lt;MOUNT-DIR&gt; &lt;TYPE&gt; &lt;OPTIONS&gt; &lt;DUMP&gt; &lt;PASS&gt;
LABEL=LUKS-ROOT     /     btrfs defaults,noatime            0 0
LABEL=ESP           /boot vfat  defaults,noatime,umask=0077 0 1
/swap               none  swap  defaults,nofail             0 0
#efivarfs /sys/firmware/efi/efivars efivarfs ro,nosuid,nodev,noexec,relatime 0 0</pre>
</dd></dl>
</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Filesystems&quot;,&quot;hid&quot;:&quot;filesystems&quot;,&quot;codeblockOffset&quot;:1,&quot;secid&quot;:10,&quot;range&quot;:&quot;5181-5759&quot;} -->
<h3 class="sectionedit11" id="kernel_modules">Kernel Modules</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Set blacklisted kernel modules on startup:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=3" title="Download Snippet" class="mediafile mf_conf">/etc/modprobe.d/blacklist.conf</a></dt>
<dd><pre class="code file text">## Blacklist pcspkr (system beeping).
blacklist pcspkr</pre>
</dd></dl>
</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Kernel Modules&quot;,&quot;hid&quot;:&quot;kernel_modules&quot;,&quot;codeblockOffset&quot;:3,&quot;secid&quot;:11,&quot;range&quot;:&quot;5760-5938&quot;} -->
<h3 class="sectionedit12" id="locales">Locales</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Set locales to be generated by system:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=4" title="Download Snippet" class="mediafile mf_">/etc/default/libc-locales</a></dt>
<dd><pre class="code file text">## List of GNU libc locales regenerated by the glibc-locales package.
## All libc locales are available in '/usr/share/i18n/locales/'.
##
## If you add new locales you can regenerate them with:
## $(xbps-reconfigure -f glibc-locales)
&nbsp;
C.UTF-8 UTF-8
...
en_US.UTF-8 UTF-8
en_US ISO-8859-1
...</pre>
</dd></dl>
</div>
</li>
<li class="level1"><div class="li"> Generate locales:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-reconfigure -f glibc-locales</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Set system locales:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=5" title="Download Snippet" class="mediafile mf_conf">/etc/locale.conf</a></dt>
<dd><pre class="code file text">LANG=&quot;en_US.UTF-8&quot;</pre>
</dd></dl>
</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Locales&quot;,&quot;hid&quot;:&quot;locales&quot;,&quot;codeblockOffset&quot;:4,&quot;secid&quot;:12,&quot;range&quot;:&quot;5939-6496&quot;} -->
<h3 class="sectionedit13" id="timezone">Timezone</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Create symlink to UTC timezone:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">ln -sf /usr/share/zoneinfo/UTC /etc/localtime</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Save current time to RTC:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">hwclock --systohc</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Timezone&quot;,&quot;hid&quot;:&quot;timezone&quot;,&quot;codeblockOffset&quot;:6,&quot;secid&quot;:13,&quot;range&quot;:&quot;6497-6693&quot;} -->
<h3 class="sectionedit14" id="runit">Runit</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Set void configuration run by runit:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=6" title="Download Snippet" class="mediafile mf_conf">/etc/rc.conf</a></dt>
<dd><pre class="code file text">## Set hostname (recommended to set in '/etc/hostname' instead).
#HOSTNAME='voidlinux'
&nbsp;
## Set RTC to use UTC or localtime (localtime is inconsistent for DST).
HARDWARECLOCK='UTC'
&nbsp;
## Set timezone (recommended to set symlink '/etc/localtime' &gt;
## '/usr/share/zoneinfo/&lt;TIMEZONE&gt;').
#TIMEZONE=&quot;UTC&quot;
&nbsp;
## Set console keymap (keymaps are in '/usr/share/kbd/keymaps/').
KEYMAP='us'
&nbsp;
## Set console font (fonts are in '/usr/share/kbd/consolefonts/').
FONT='eurlatgr'
#FONT_MAP=''
#FONT_UNIMAP=''
&nbsp;
## Set amount of ttys.
#TTYS=''
&nbsp;
## Set mode for cgroup mounts.
## - hybrid:  mount cgroup v1 in '/sys/fs/cgroup/' and cgroup v2 under
##            '/sys/fs/cgroup/unified/'.
## - legacy:  mount cgroup v1 in '/sys/fs/cgroup/'.
## - unified: mount cgroup v2 in '/sys/fs/cgroup/'.
CGROUP_MODE='hybrid'
&nbsp;
## Set this to true only if you do not want seed files to actually credit the
## RNG, for example if you plan to replicate this file system image and do not
## have the wherewithal to first delete the contents of '/var/lib/seedrng'.
SEEDRNG_SKIP_CREDIT='false'</pre>
</dd></dl>
</div>
</li>
<li class="level1"><div class="li"> Mount efivars as read-only to protect UEFI NVRAM<sup><a href="#fn__5" id="fnt__5" class="fn_top">5)</a></sup>:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=7" title="Download Snippet" class="mediafile mf_sh">/etc/runit/core-services/00-pseudofs.sh</a></dt>
<dd><pre class="code file bash">...
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re5">-d</span> <span class="sy0">/</span>sys<span class="sy0">/</span>firmware<span class="sy0">/</span>efi<span class="sy0">/</span>efivars <span class="br0">&#93;</span>; <span class="kw1">then</span>
    mountpoint <span class="re5">-q</span> <span class="sy0">/</span>sys<span class="sy0">/</span>firmware<span class="sy0">/</span>efi<span class="sy0">/</span>efivars <span class="sy0">||</span> <span class="kw2">mount</span> <span class="re5">-o</span> ro,nosuid,noexec,nodev <span class="re5">-t</span> efivarfs efivarfs <span class="sy0">/</span>sys<span class="sy0">/</span>firmware<span class="sy0">/</span>efi<span class="sy0">/</span>efivars
<span class="kw1">fi</span>
...</pre>
</dd></dl>
</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Runit&quot;,&quot;hid&quot;:&quot;runit&quot;,&quot;codeblockOffset&quot;:6,&quot;secid&quot;:14,&quot;range&quot;:&quot;6694-8210&quot;} -->
<h3 class="sectionedit15" id="hostname_hosts">Hostname &amp; Hosts</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Set hostname:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">echo &#039;&lt;HOSTNAME&gt;&#039; &gt; /etc/hostname</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Set local DNS table:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=8" title="Download Snippet" class="mediafile mf_">/etc/hosts</a></dt>
<dd><pre class="code file text">## &lt;IP-ADDRESS&gt; [FQDN] &lt;HOSTNAME&gt;
127.0.0.1 localhost
::1       localhost</pre>
</dd></dl>
</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Hostname &amp; Hosts&quot;,&quot;hid&quot;:&quot;hostname_hosts&quot;,&quot;codeblockOffset&quot;:8,&quot;secid&quot;:15,&quot;range&quot;:&quot;8211-8443&quot;} -->
<h3 class="sectionedit16" id="login_messages">Login Messages</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Set login messages:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">echo &#039;&#039; &gt; /etc/issue</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">echo &#039;&#039; &gt; /etc/motd</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Login Messages&quot;,&quot;hid&quot;:&quot;login_messages&quot;,&quot;codeblockOffset&quot;:9,&quot;secid&quot;:16,&quot;range&quot;:&quot;8444-8569&quot;} -->
<h2 class="sectionedit17" id="booting">Booting</h2>
<div class="level2">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Booting&quot;,&quot;hid&quot;:&quot;booting&quot;,&quot;codeblockOffset&quot;:9,&quot;secid&quot;:17,&quot;range&quot;:&quot;8570-8590&quot;} -->
<h3 class="sectionedit18" id="initramfs">Initramfs</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Configure initramfs:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=9" title="Download Snippet" class="mediafile mf_conf">/etc/dracut.conf.d/10-crypt.conf</a></dt>
<dd><pre class="code file text">## Support for encrypted partitions.
install_items+='/etc/crypttab'
hostonly='yes'</pre>
</dd></dl>
</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Initramfs&quot;,&quot;hid&quot;:&quot;initramfs&quot;,&quot;codeblockOffset&quot;:9,&quot;secid&quot;:18,&quot;range&quot;:&quot;8591-8772&quot;} -->
<h3 class="sectionedit19" id="bootloader">Bootloader</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> Install bootloader to ESP:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">grub-install --target=x86_64-efi --efi-directory=/boot/ --removable</span>
<span class="cli_prompt">(chroot) # </span><span class="cli_command">grub-install --target=x86_64-efi --efi-directory=/boot/ --bootloader-id=GRUB</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Configure custom bootloader hook:<dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=10" title="Download Snippet" class="mediafile mf_d_40_custom">/etc/grub.d/40_custom</a></dt>
<dd><pre class="code file bash"><span class="co0">#!/bin/sh</span>
&nbsp;
<span class="co0">## Required line.</span>
<span class="kw3">exec</span> <span class="kw2">tail</span> <span class="re5">-n</span> +<span class="nu0">3</span> <span class="st0">&quot;<span class="es3">${0}</span>&quot;</span>
&nbsp;
<span class="co0">## Custom menu entries.</span>
menuentry <span class="st_h">'Reboot Computer'</span> <span class="re5">--class</span> restart <span class="br0">&#123;</span>
    reboot
<span class="br0">&#125;</span>
&nbsp;
menuentry <span class="st_h">'Shutdown Computer'</span> <span class="re5">--class</span> shutdown <span class="br0">&#123;</span>
    halt
<span class="br0">&#125;</span></pre>
</dd></dl>
</div>
</li>
<li class="level1"><div class="li"> Make bootloader script executable:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">chmod 0755 /etc/grub.d/40_custom</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Configure bootloader<sup><a href="#fn__6" id="fnt__6" class="fn_top">6)</a></sup>: <dl class="file">
<dt><a href="http://localhost/_export/code/void/installation?codeblock=11" title="Download Snippet" class="mediafile mf_">/etc/default/grub</a></dt>
<dd><pre class="code file text">## Apply changes made to this file with:
## $(grub-mkconfig -o /boot/grub/grub.cfg)
&nbsp;
## OS name.
GRUB_DISTRIBUTOR='Void'
&nbsp;
## Default menu entry.
GRUB_DEFAULT='0'
GRUB_SAVEDEFAULT='false'
&nbsp;
## Time to boot default entry unless key is pressed.
GRUB_TIMEOUT='-1'
GRUB_TIMEOUT_STYLE='menu'
&nbsp;
## Do not generate recovery mode entries.
GRUB_DISABLE_RECOVERY='true'
&nbsp;
## Terminal input devices.
GRUB_TERMINAL_INPUT='console'
&nbsp;
## Terminal output.
GRUB_GFXMODE='auto'
GRUB_GFXPAYLOAD_LINUX='text'
&nbsp;
## Enable encrypted disks.
GRUB_ENABLE_CRYPTODISK='y'
&nbsp;
## Kernel parameters.
GRUB_CMDLINE_LINUX=''
GRUB_CMDLINE_LINUX_DEFAULT='cryptdevice=LABEL=LUKS:luks-root net.ifnames=0 quiet'
&nbsp;
## Bootloader colors (fg/bg).
GRUB_COLOR_NORMAL='white/black'
GRUB_COLOR_HIGHLIGHT='white/black'
&nbsp;
## Disable nested entries.
#GRUB_DISABLE_SUBMENU='true'
&nbsp;
## Bootloader theme.
#GRUB_THEME=''</pre>
</dd></dl>
</div>
</li>
<li class="level1"><div class="li"> Apply bootloader configuration changes:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">grub-mkconfig -o /boot/grub/grub.cfg</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Bootloader&quot;,&quot;hid&quot;:&quot;bootloader&quot;,&quot;codeblockOffset&quot;:10,&quot;secid&quot;:19,&quot;range&quot;:&quot;8773-10511&quot;} -->
<h2 class="sectionedit20" id="finishing">Finishing</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Reconfigure all packages:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">xbps-reconfigure -fa</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Make root account accessible: </p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">passwd root</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">&lt;NEW-ROOT-PASSWORD&gt;</span>
<span class="cli_prompt">&gt; </span><span class="cli_command">&lt;NEW-ROOT-PASSWORD (VERIFY)&gt;</span></pre><p></div>
</li>
<li class="level1"><div class="li"> Reboot system:</p><pre class='cli  '><span class="cli_prompt">(chroot) # </span><span class="cli_command">exit</span>
<span class="cli_prompt"># </span><span class="cli_command">reboot</span></pre><p></div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Finishing&quot;,&quot;hid&quot;:&quot;finishing&quot;,&quot;codeblockOffset&quot;:12,&quot;secid&quot;:20,&quot;range&quot;:&quot;10512-&quot;} --><div class="footnotes">
<div class="fn"><sup><a href="#fnt__1" id="fn__1" class="fn_bot">1)</a></sup> 
, <sup><a href="#fnt__5" id="fn__5" class="fn_bot">5)</a></sup> 
<div class="content">Read-write efivarfs problem: <a href="https://github.com/systemd/systemd/issues/2402" class="urlextern" title="https://github.com/systemd/systemd/issues/2402">https://github.com/systemd/systemd/issues/2402</a>.</div></div>
<div class="fn"><sup><a href="#fnt__2" id="fn__2" class="fn_bot">2)</a></sup> 
<div class="content">Status of btrfs in linux: <a href="https://btrfs.wiki.kernel.org/index.php/Status" class="urlextern" title="https://btrfs.wiki.kernel.org/index.php/Status">https://btrfs.wiki.kernel.org/index.php/Status</a>.</div></div>
<div class="fn"><sup><a href="#fnt__3" id="fn__3" class="fn_bot">3)</a></sup> 
<div class="content">Btrfs mount options: <a href="https://btrfs.readthedocs.io/en/latest/Administration.html#mount-options" class="urlextern" title="https://btrfs.readthedocs.io/en/latest/Administration.html#mount-options">https://btrfs.readthedocs.io/en/latest/Administration.html#mount-options</a>.</div></div>
<div class="fn"><sup><a href="#fnt__4" id="fn__4" class="fn_bot">4)</a></sup> 
<div class="content">Void subrepositories: <a href="https://docs.voidlinux.org/xbps/repositories/index.html#subrepositories" class="urlextern" title="https://docs.voidlinux.org/xbps/repositories/index.html#subrepositories">https://docs.voidlinux.org/xbps/repositories/index.html#subrepositories</a>.</div></div>
<div class="fn"><sup><a href="#fnt__6" id="fn__6" class="fn_bot">6)</a></sup> 
<div class="content">GRUB2 config options: <a href="https://www.gnu.org/software/grub/manual/grub/html_node/Simple-configuration.html" class="urlextern" title="https://www.gnu.org/software/grub/manual/grub/html_node/Simple-configuration.html">https://www.gnu.org/software/grub/manual/grub/html_node/Simple-configuration.html</a>.</div></div>
</div>
