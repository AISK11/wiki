====== Installation ======

===== Environment Preparation =====

  - Gain system access:<cli>
> root
> voidlinux
# bash
</cli>
  - Set console keymap and font:<cli>
# loadkeys us
# setfont eurlatgr
# unicode_start
</cli>
  -  Disable system beeping (pcspkr module):<cli>
# modprobe -r pcspkr
</cli>
  - Verify UEFI boot and mount efivars as read-only to protect UEFI NVRAM:<cli>
# ls -ld /sys/firmware/efi/
# mount -t efivarfs -o ro efivarfs /sys/firmware/efi/efivars/
</cli>
  - Verify internet connectivity. See [[void:network|Network]].
  - Update live environment system and install additional packages:<cli>
# xbps-install -Su xbps && xbps-install -Su
# xbps-install parted
</cli>

===== Disk Partitioning =====

  - Create partitions:<cli>
# cfdisk -z </dev/sdX>
cfdisk> gpt
cfdisk> n
cfdisk> 2GiB
cfdisk> t
cfdisk> EFI System
cfdisk> n
cfdisk>  (Enter)
cfdisk> W
cfdisk> yes
cfdisk> q
# parted -s </dev/sdX> name 1 ESP
# parted -s </dev/sdX> name 2 LUKS
</cli>
  - Create filesystems: 
    - EFI filesystem:<cli>
# wipefs -a </dev/sdX1>
# mkfs.vfat -F 32 </dev/sdX1>
# fatlabel </dev/sdX1> ESP
# fatlabel -i </dev/sdX1> 00000001
# fsck.vfat </dev/sdX1> ; echo $?
</cli>
    - LUKS encrypted filesystem:<cli>
# dd if=/dev/urandom of=</dev/sdX2> status=progress ; sync
# wipefs -a </dev/sdX2>
# cryptsetup luksFormat -y --type luks2 </dev/sdX2>
> YES
> <NEW-LUKS-PASSWORD>
> <NEW-LUKS-PASSWORD (VERIFY)>
# cryptsetup config --label LUKS </dev/sdX2>
# cryptsetup luksUUID --uuid 00000000-0000-0000-0000-000000000002 </dev/sdX2>
> YES
# cryptsetup open --type luks2 </dev/sdX2> luks-root
> <LUKS-PASSWORD>
</cli>
    - Root filesystem:<cli>
# wipefs -a /dev/mapper/luks-root
# mkfs.btrfs /dev/mapper/luks-root
# btrfs filesystem label /dev/mapper/luks-root LUKS-ROOT
# btrfstune -U 00000000-0000-0000-0000-000000000003 /dev/mapper/luks-root
> y
# btrfs check /dev/mapper/luks-root ; echo $?
</cli>
  - Verify partitions and filesystems:<cli>
# parted -s </dev/sdX> [unit B] p free
# lsblk -fp </dev/sdX>
</cli>

===== Base System Installation =====

  - Create mount points and mount filesystems:<cli>
# mkdir -p /mnt/void/
# mount /dev/mapper/luks-root /mnt/void/
# mkdir -p /mnt/void/boot/
# mount </dev/sdX1> /mnt/void/boot/
</cli>
  - Copy xbps signing keys:<cli>
# mkdir -p /mnt/void/var/db/xbps/keys/
# xbps-query -f xbps | grep '/var/db/xbps/keys/' | xargs -I {} cp {} /mnt/void/var/db/xbps/keys/
</cli>
  - Instal minimal base system packages:<cli>
# xbps-install -S -R https://repo-default.voidlinux.org/current -r /mnt/void/ base-minimal
</cli>

===== Chroot =====

  - Mount filesystems:<cli>
# mount --rbind /dev/ /mnt/void/dev/
# mount --rbind /sys/ /mnt/void/sys/
# mount --rbind /proc/ /mnt/void/proc/
# mount --rbind /run/ /mnt/void/run/
# mount --make-rslave /mnt/void/dev/
# mount --make-rslave /mnt/void/sys/
# mount --make-rslave /mnt/void/proc/
# mount --make-rslave /mnt/void/run/
</cli>
  - Copy DNS configuration:<cli>
# cp /etc/resolv.conf /mnt/void/etc/
</cli>
  - Chroot into the new installation:<cli>
# chroot /mnt/void/ /bin/sh
# . ./etc/profile
# export PS1='(chroot) # '
</cli>

----

===== Full System Installation =====

  - Install additional void subrepositories((Void subrepositories: https://docs.voidlinux.org/xbps/repositories/index.html#subrepositories.)) and synchronize them:<cli>
(chroot) # xbps-install void-repo-nonfree void-repo-multilib void-repo-multilib-nonfree
(chroot) # xbps-install -Su xbps && xbps-install -Su
</cli>
  - Partitioning tools:<cli>
(chroot) # xbps-install parted cryptsetup dosfstools e2fsprogs btrfs-progs
</cli>
  - System tools:<cli>
(chroot) # xpbs-install kbd kmod eudev acpid ncurses less
</cli>
  - Administration tools:<cli>
(chroot) # xbps-install mdocml man-pages neovim git file tree ncdu psmisc htop btop neofetch inxi
</cli>
  - Shell tools:<cli>
(chroot) # xbps-install zsh zsh-autosuggestions zsh-completions zsh-syntax-highlighting
</cli>
  - Boot tools:<cli>
(chroot) # xbps-install efibootmgr grub-x86_64-efi dracut-uefi linux linux-lts
</cli>
  - Network tools:
    - Basic:<cli>
(chroot) # xbps-install iproute2 iputils dhcpcd unbound nftables
</cli>
    - Ethernet:<cli>
(chroot) # xbps-install ethtool
</cli>
    - Wi-Fi:<cli>
(chroot) # xbps-install wpa_supplicant iw [wifi-firmware]
</cli>
===== Swap File =====

  - Allocate space on COW filesystem (such as btrfs):<cli>
(chroot) # truncate -s 0 /swap
(chroot) # chattr +C /swap
(chroot) # fallocate -l 4G /swap
(chroot) # chmod 0600 /swap
</cli>
  - Set file as swap area:<cli>
(chroot) # mkswap /swap
(chroot) # swapon /swap
</cli>

===== System Configuration =====

==== XBPS ====

  - Set ignored packages by XBPS:<file text /etc/xbps.d/ignore.conf>
## Following packages will not be installed as dependencies, but may be
## explicitly specified to be installed. Also if they are already installed,
## they can be uninstalled.
ignorepkg=nvi
ignorepkg=sudo
</file>
  - Uninstall unneeded packages:<cli>
(chroot) # xbps-remove -Ro nvi
</cli>

==== Filesystems ====

  - Configure crypttab:<file text /etc/crypttab>
## <MAPPER-NAME> <DEVICE> <PASSWORD-FILE> <OPTIONS>
luks-root UUID=00000000-0000-0000-0000-000000000002 none luks
</file>
  - Configure fstab:<file text /etc/fstab>
## <FILE-SYSTEM> <MOUNT-DIR> <TYPE> <OPTIONS> <DUMP> <PASS>
#efivarfs /sys/firmware/efi/efivars efivarfs ro,nosuid,nodev,noexec,relatime 0 0
LABEL=ESP           /boot vfat  defaults,noatime,umask=0077 0 1
LABEL=LUKS-ROOT     /     btrfs defaults,noatime            0 0
/swap               none  swap  defaults                    0 0
</file>

==== Kernel Modules ====

  - Set blacklisted kernel modules on startup:<file text /etc/modprobe.d/blakclist.conf>
## Blacklist pcspkr (system beeping).
blacklist pcspkr
</file>

==== Locales ====

  - Set locales to be generated by system:<file text /etc/default/libc-locales>
## List of GNU libc locales regenerated by the glibc-locales package.
## All libc locales are available in '/usr/share/i18n/locales/'.
##
## If you add new locales you can regenerate them with:
## $(xbps-reconfigure -f glibc-locales)

C.UTF-8 UTF-8
...
en_GB.UTF-8 UTF-8
en_GB ISO-8859-1
...
en_US.UTF-8 UTF-8
en_US ISO-8859-1
...
</file>
  - Generate locales:<cli>
(chroot) # xbps-reconfigure -f glibc-locales
</cli>
  - Set system locales:<file text /etc/locale.conf>
LANG="en_US.UTF-8"
LANGUAGE="en_GB:C"
LC_ADDRESS="en_US.UTF8"
LC_COLLATE="en_US.UTF-8"
LC_CTYPE="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF8"
LC_MONETARY="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_MEASUREMENT="en_GB.UTF8"
LC_NAME="en_US.UTF8"
LC_NUMERIC="en_US.UTF-8"
LC_PAPER="en_GB.UTF-8"
LC_TELEPHONE="en_US.UTF8"
LC_TIME="en_GB.UTF-8"
#LC_ALL=""
</file>

==== Timezone ====

  - Create symlink to UTC timezone:<cli>
(chroot) # ln -sf /usr/share/zoneinfo/UTC /etc/localtime
</cli>
  - Save current time to RTC:<cli>
(chroot) # hwclock --systohc
</cli>

==== Runit ====

  - Set void configuration run by runit:<file text /etc/rc.conf>
## Set hostname (recommended to set in '/etc/hostname' instead).
#HOSTNAME='voidlinux'

## Set RTC to use UTC or localtime (localtime is inconsistent for DST).
HARDWARECLOCK='UTC'

## Set timezone (recommended to set symlink '/etc/localtime' >
## '/usr/share/zoneinfo/<TIMEZONE>').
#TIMEZONE="UTC"

## Set console keymap (keymaps are in '/usr/share/kbd/keymaps/').
KEYMAP='us'

## Set console font (fonts are in '/usr/share/kbd/consolefonts/').
FONT='eurlatgr'
#FONT_MAP=''
#FONT_UNIMAP=''

## Set amount of ttys.
#TTYS=''

## Set mode for cgroup mounts.
## - hybrid:  mount cgroup v1 in '/sys/fs/cgroup/' and cgroup v2 under
##            '/sys/fs/cgroup/unified/'.
## - legacy:  mount cgroup v1 in '/sys/fs/cgroup/'.
## - unified: mount cgroup v2 in '/sys/fs/cgroup/'.
CGROUP_MODE='hybrid'

## Set this to true only if you do not want seed files to actually credit the
## RNG, for example if you plan to replicate this file system image and do not
## have the wherewithal to first delete the contents of '/var/lib/seedrng'.
SEEDRNG_SKIP_CREDIT='false'
</file>

==== Hostname & Hosts ====

  - Set hostname:<cli>
(chroot) # echo '<HOSTNAME>' > /etc/hostname
</cli>
  - Set local DNS table:<file text /etc/hosts>
## <IP-ADDRESS> [FQDN] <HOSTNAME>
127.0.0.1 localhost
::1 localhost
</file>

==== Login Messages ====

  - Set login messages:<cli>
(chroot) # echo '' > /etc/issue
(chroot) # echo '' > /etc/motd
</cli>

===== Booting =====

==== Initramfs ====

  - Configure initramfs:<file text /etc/dracut.conf.d/10-crypt.conf>
install_items+="/etc/crypttab"
</file>
  - Regenerate initramfs:<cli>
(chroot)# 
</cli>

==== Bootloader ====



===== Finishing =====