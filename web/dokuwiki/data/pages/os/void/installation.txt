====== Installation ======

===== Prepare Environment =====

<WRAP center round important 60%>
This section is incomplete and needs further work!
</WRAP>

1. Gain system access:

<cli>
> root
> voidlinux
</cli>

2. Change shell to bash:

<cli>
# bash
</cli>

3. Set keymap and font (temporarily):

<cli>
# loadkeys us
# setfont eurlatgr
# unicode_start
</cli>

4. Disable system beeping:

<cli>
# modprobe -r pcspkr
</cli>

5. Verify UEFI boot and mount efivars as read-only to protect UEFI NVRAM:

<cli>
# ls -ld /sys/firmware/efi/
# mount -t efivarfs -o ro efivarfs /sys/firmware/efi/efivars/
</cli>

5.5 Configure internet:

6. Update live environment system and install additional packages:

<cli>
# xbps-install -Su xbps && xbps-install -u
# xbps-install parted
</cli>

===== Disk Preparation =====

1. Create EFI and empty partition.

<cli>
# cfdisk -z </dev/sdX>
cfdisk> gpt
cfdisk> n
cfdisk> 1GiB
cfdisk> t
cfdisk> EFI System
cfdisk> n
cfdisk>  (Enter)
cfdisk> W
cfdisk> yes
cfdisk> q
# parted -s </dev/sdX> name 1 ESP
# parted -s </dev/sdX> name 2 LUKS
</cli>

2. Create EFI filesystem:

<cli>
# wipefs -a </dev/sdX1>
# mkfs.vfat -F 32 </dev/sdX1>
# fatlabel </dev/sdX1> ESP
# fatlabel -i </dev/sdX1> 00000001
# fsck.vfat </dev/sdX1> ; echo $?
</cli>

3. Encrypt empty partition with LUKS:

<cli>
# wipefs -a </dev/sdX2>
# cryptsetup luksFormat -y --type luks2 </dev/sdX2>
> YES
> <NEW_LUKS_PASSWORD>
> <NEW_LUKS_PASSWORD (VERIFY)>
# cryptsetup config --label LUKS </dev/sdX2>
# cryptsetup luksUUID --uuid 00000000-0000-0000-0000-000000000002 </dev/sdX2>
> YES
# cryptsetup open --type luks2 </dev/sdX2> luks-root
> <LUKS_PASSWORD>
</cli>

4. Create root filesystem on encrypted partition:

<cli>
# wipefs -a /dev/mapper/luks-root
# mkfs.btrfs /dev/mapper/luks-root
# btrfs filesystem label /dev/mapper/luks-root LUKS-ROOT
# btrfstune -U 00000000-0000-0000-0000-000000000003 /dev/mapper/luks-root
> y
# btrfs check /dev/mapper/luks-root ; echo $?
</cli>

===== Base System Installation =====

<WRAP center round important 60%>
This section is incomplete and needs further work!
</WRAP>

1. Mount filesystems to install environment:

<cli>
# mkdir -p /mnt/void/
# mount /dev/mapper/luks-root /mnt/void/
# mkdir -p /mnt/void/boot/
# mount </dev/sdX1> /mnt/void/boot/
# for DIR in dev sys proc run ; do mkdir -p /mnt/void/${DIR}/ ; mount --rbind /${DIR}/ /mnt/void/${DIR}/ ; mount --make-rslave /mnt/void/${DIR}/ ; done
</cli>

2. Copy xbps signing keys:

<cli>
# mkdir -p /mnt/void/var/db/xbps/keys/
# xbps-query -f xbps | grep '/var/db/xbps/keys/' | xargs -I {} cp {} /mnt/void/var/db/xbps/keys/
</cli>

3. Install base system packages:!!!

<cli>
# xbps-install -S -R https://repo-default.voidlinux.org/current -r /mnt/void/ base-system
</cli>

===== Chroot =====

<WRAP center round important 60%>
This section is incomplete and needs further work!
</WRAP>

1. Chroot to install environment:

<cli>
# chroot /mnt/void/ /bin/bash
# . /etc/profile
# export PS1="(chroot) ${PS1}"
</cli>

2. Add DNS server:

<cli>
# echo 'nameserver 1.1.1.1' > /etc/resolv.conf
</cli>